#ifndef CHARACTERCHARACTERISTICSINFORMATIONS_H
#define CHARACTERCHARACTERISTICSINFORMATIONS_H

#include "src/Protocol/Types/AbstractClass.h"
#include "src/Protocol/Types/Data/game/character/alignment/ActorExtendedAlignmentInformations.h"
#include "src/Protocol/Types/Data/game/character/characteristic/CharacterBaseCharacteristic.h"
#include "src/Protocol/Types/Data/game/character/characteristic/CharacterSpellModification.h"
#include "src/Engines/IO/Network/Utils/FuncTree.h"

class CharacterCharacteristicsInformations : public AbstractClass
{
public:
  virtual void serialize(Writer *output);
  void serializeAs_CharacterCharacteristicsInformations(Writer *output);
  virtual void deserialize(Reader *input);
  void deserializeAs_CharacterCharacteristicsInformations(Reader *input);
  void deserializeAsync(FuncTree tree);
  void deserializeAsyncAs_CharacterCharacteristicsInformations(FuncTree tree);
  CharacterCharacteristicsInformations();
  bool operator==(const CharacterCharacteristicsInformations &compared);

  double experience;
  double experienceLevelFloor;
  double experienceNextLevelFloor;
  double experienceBonusLimit;
  double kamas;
  uint statsPoints;
  uint additionnalPoints;
  uint spellsPoints;
  ActorExtendedAlignmentInformations alignmentInfos;
  uint lifePoints;
  uint maxLifePoints;
  uint energyPoints;
  uint maxEnergyPoints;
  int actionPointsCurrent;
  int movementPointsCurrent;
  CharacterBaseCharacteristic initiative;
  CharacterBaseCharacteristic prospecting;
  CharacterBaseCharacteristic actionPoints;
  CharacterBaseCharacteristic movementPoints;
  CharacterBaseCharacteristic strength;
  CharacterBaseCharacteristic vitality;
  CharacterBaseCharacteristic wisdom;
  CharacterBaseCharacteristic chance;
  CharacterBaseCharacteristic agility;
  CharacterBaseCharacteristic intelligence;
  CharacterBaseCharacteristic range;
  CharacterBaseCharacteristic summonableCreaturesBoost;
  CharacterBaseCharacteristic reflect;
  CharacterBaseCharacteristic criticalHit;
  uint criticalHitWeapon;
  CharacterBaseCharacteristic criticalMiss;
  CharacterBaseCharacteristic healBonus;
  CharacterBaseCharacteristic allDamagesBonus;
  CharacterBaseCharacteristic weaponDamagesBonusPercent;
  CharacterBaseCharacteristic damagesBonusPercent;
  CharacterBaseCharacteristic trapBonus;
  CharacterBaseCharacteristic trapBonusPercent;
  CharacterBaseCharacteristic glyphBonusPercent;
  CharacterBaseCharacteristic runeBonusPercent;
  CharacterBaseCharacteristic permanentDamagePercent;
  CharacterBaseCharacteristic tackleBlock;
  CharacterBaseCharacteristic tackleEvade;
  CharacterBaseCharacteristic PAAttack;
  CharacterBaseCharacteristic PMAttack;
  CharacterBaseCharacteristic pushDamageBonus;
  CharacterBaseCharacteristic criticalDamageBonus;
  CharacterBaseCharacteristic neutralDamageBonus;
  CharacterBaseCharacteristic earthDamageBonus;
  CharacterBaseCharacteristic waterDamageBonus;
  CharacterBaseCharacteristic airDamageBonus;
  CharacterBaseCharacteristic fireDamageBonus;
  CharacterBaseCharacteristic dodgePALostProbability;
  CharacterBaseCharacteristic dodgePMLostProbability;
  CharacterBaseCharacteristic neutralElementResistPercent;
  CharacterBaseCharacteristic earthElementResistPercent;
  CharacterBaseCharacteristic waterElementResistPercent;
  CharacterBaseCharacteristic airElementResistPercent;
  CharacterBaseCharacteristic fireElementResistPercent;
  CharacterBaseCharacteristic neutralElementReduction;
  CharacterBaseCharacteristic earthElementReduction;
  CharacterBaseCharacteristic waterElementReduction;
  CharacterBaseCharacteristic airElementReduction;
  CharacterBaseCharacteristic fireElementReduction;
  CharacterBaseCharacteristic pushDamageReduction;
  CharacterBaseCharacteristic criticalDamageReduction;
  CharacterBaseCharacteristic pvpNeutralElementResistPercent;
  CharacterBaseCharacteristic pvpEarthElementResistPercent;
  CharacterBaseCharacteristic pvpWaterElementResistPercent;
  CharacterBaseCharacteristic pvpAirElementResistPercent;
  CharacterBaseCharacteristic pvpFireElementResistPercent;
  CharacterBaseCharacteristic pvpNeutralElementReduction;
  CharacterBaseCharacteristic pvpEarthElementReduction;
  CharacterBaseCharacteristic pvpWaterElementReduction;
  CharacterBaseCharacteristic pvpAirElementReduction;
  CharacterBaseCharacteristic pvpFireElementReduction;
  CharacterBaseCharacteristic meleeDamageDonePercent;
  CharacterBaseCharacteristic meleeDamageReceivedPercent;
  CharacterBaseCharacteristic rangedDamageDonePercent;
  CharacterBaseCharacteristic rangedDamageReceivedPercent;
  CharacterBaseCharacteristic weaponDamageDonePercent;
  CharacterBaseCharacteristic weaponDamageReceivedPercent;
  CharacterBaseCharacteristic spellDamageDonePercent;
  CharacterBaseCharacteristic spellDamageReceivedPercent;
  QList<CharacterSpellModification> spellModifications;
  uint probationTime;

private:
  void _experienceFunc(Reader *input);
  void _experienceLevelFloorFunc(Reader *input);
  void _experienceNextLevelFloorFunc(Reader *input);
  void _experienceBonusLimitFunc(Reader *input);
  void _kamasFunc(Reader *input);
  void _statsPointsFunc(Reader *input);
  void _additionnalPointsFunc(Reader *input);
  void _spellsPointsFunc(Reader *input);
  void _alignmentInfostreeFunc(Reader *input);
  void _lifePointsFunc(Reader *input);
  void _maxLifePointsFunc(Reader *input);
  void _energyPointsFunc(Reader *input);
  void _maxEnergyPointsFunc(Reader *input);
  void _actionPointsCurrentFunc(Reader *input);
  void _movementPointsCurrentFunc(Reader *input);
  void _initiativetreeFunc(Reader *input);
  void _prospectingtreeFunc(Reader *input);
  void _actionPointstreeFunc(Reader *input);
  void _movementPointstreeFunc(Reader *input);
  void _strengthtreeFunc(Reader *input);
  void _vitalitytreeFunc(Reader *input);
  void _wisdomtreeFunc(Reader *input);
  void _chancetreeFunc(Reader *input);
  void _agilitytreeFunc(Reader *input);
  void _intelligencetreeFunc(Reader *input);
  void _rangetreeFunc(Reader *input);
  void _summonableCreaturesBoosttreeFunc(Reader *input);
  void _reflecttreeFunc(Reader *input);
  void _criticalHittreeFunc(Reader *input);
  void _criticalHitWeaponFunc(Reader *input);
  void _criticalMisstreeFunc(Reader *input);
  void _healBonustreeFunc(Reader *input);
  void _allDamagesBonustreeFunc(Reader *input);
  void _weaponDamagesBonusPercenttreeFunc(Reader *input);
  void _damagesBonusPercenttreeFunc(Reader *input);
  void _trapBonustreeFunc(Reader *input);
  void _trapBonusPercenttreeFunc(Reader *input);
  void _glyphBonusPercenttreeFunc(Reader *input);
  void _runeBonusPercenttreeFunc(Reader *input);
  void _permanentDamagePercenttreeFunc(Reader *input);
  void _tackleBlocktreeFunc(Reader *input);
  void _tackleEvadetreeFunc(Reader *input);
  void _PAAttacktreeFunc(Reader *input);
  void _PMAttacktreeFunc(Reader *input);
  void _pushDamageBonustreeFunc(Reader *input);
  void _criticalDamageBonustreeFunc(Reader *input);
  void _neutralDamageBonustreeFunc(Reader *input);
  void _earthDamageBonustreeFunc(Reader *input);
  void _waterDamageBonustreeFunc(Reader *input);
  void _airDamageBonustreeFunc(Reader *input);
  void _fireDamageBonustreeFunc(Reader *input);
  void _dodgePALostProbabilitytreeFunc(Reader *input);
  void _dodgePMLostProbabilitytreeFunc(Reader *input);
  void _neutralElementResistPercenttreeFunc(Reader *input);
  void _earthElementResistPercenttreeFunc(Reader *input);
  void _waterElementResistPercenttreeFunc(Reader *input);
  void _airElementResistPercenttreeFunc(Reader *input);
  void _fireElementResistPercenttreeFunc(Reader *input);
  void _neutralElementReductiontreeFunc(Reader *input);
  void _earthElementReductiontreeFunc(Reader *input);
  void _waterElementReductiontreeFunc(Reader *input);
  void _airElementReductiontreeFunc(Reader *input);
  void _fireElementReductiontreeFunc(Reader *input);
  void _pushDamageReductiontreeFunc(Reader *input);
  void _criticalDamageReductiontreeFunc(Reader *input);
  void _pvpNeutralElementResistPercenttreeFunc(Reader *input);
  void _pvpEarthElementResistPercenttreeFunc(Reader *input);
  void _pvpWaterElementResistPercenttreeFunc(Reader *input);
  void _pvpAirElementResistPercenttreeFunc(Reader *input);
  void _pvpFireElementResistPercenttreeFunc(Reader *input);
  void _pvpNeutralElementReductiontreeFunc(Reader *input);
  void _pvpEarthElementReductiontreeFunc(Reader *input);
  void _pvpWaterElementReductiontreeFunc(Reader *input);
  void _pvpAirElementReductiontreeFunc(Reader *input);
  void _pvpFireElementReductiontreeFunc(Reader *input);
  void _meleeDamageDonePercenttreeFunc(Reader *input);
  void _meleeDamageReceivedPercenttreeFunc(Reader *input);
  void _rangedDamageDonePercenttreeFunc(Reader *input);
  void _rangedDamageReceivedPercenttreeFunc(Reader *input);
  void _weaponDamageDonePercenttreeFunc(Reader *input);
  void _weaponDamageReceivedPercenttreeFunc(Reader *input);
  void _spellDamageDonePercenttreeFunc(Reader *input);
  void _spellDamageReceivedPercenttreeFunc(Reader *input);
  void _spellModificationstreeFunc(Reader *input);
  void _spellModificationsFunc(Reader *input);
  void _probationTimeFunc(Reader *input);

  FuncTree _alignmentInfostree;
  FuncTree _initiativetree;
  FuncTree _prospectingtree;
  FuncTree _actionPointstree;
  FuncTree _movementPointstree;
  FuncTree _strengthtree;
  FuncTree _vitalitytree;
  FuncTree _wisdomtree;
  FuncTree _chancetree;
  FuncTree _agilitytree;
  FuncTree _intelligencetree;
  FuncTree _rangetree;
  FuncTree _summonableCreaturesBoosttree;
  FuncTree _reflecttree;
  FuncTree _criticalHittree;
  FuncTree _criticalMisstree;
  FuncTree _healBonustree;
  FuncTree _allDamagesBonustree;
  FuncTree _weaponDamagesBonusPercenttree;
  FuncTree _damagesBonusPercenttree;
  FuncTree _trapBonustree;
  FuncTree _trapBonusPercenttree;
  FuncTree _glyphBonusPercenttree;
  FuncTree _runeBonusPercenttree;
  FuncTree _permanentDamagePercenttree;
  FuncTree _tackleBlocktree;
  FuncTree _tackleEvadetree;
  FuncTree _PAAttacktree;
  FuncTree _PMAttacktree;
  FuncTree _pushDamageBonustree;
  FuncTree _criticalDamageBonustree;
  FuncTree _neutralDamageBonustree;
  FuncTree _earthDamageBonustree;
  FuncTree _waterDamageBonustree;
  FuncTree _airDamageBonustree;
  FuncTree _fireDamageBonustree;
  FuncTree _dodgePALostProbabilitytree;
  FuncTree _dodgePMLostProbabilitytree;
  FuncTree _neutralElementResistPercenttree;
  FuncTree _earthElementResistPercenttree;
  FuncTree _waterElementResistPercenttree;
  FuncTree _airElementResistPercenttree;
  FuncTree _fireElementResistPercenttree;
  FuncTree _neutralElementReductiontree;
  FuncTree _earthElementReductiontree;
  FuncTree _waterElementReductiontree;
  FuncTree _airElementReductiontree;
  FuncTree _fireElementReductiontree;
  FuncTree _pushDamageReductiontree;
  FuncTree _criticalDamageReductiontree;
  FuncTree _pvpNeutralElementResistPercenttree;
  FuncTree _pvpEarthElementResistPercenttree;
  FuncTree _pvpWaterElementResistPercenttree;
  FuncTree _pvpAirElementResistPercenttree;
  FuncTree _pvpFireElementResistPercenttree;
  FuncTree _pvpNeutralElementReductiontree;
  FuncTree _pvpEarthElementReductiontree;
  FuncTree _pvpWaterElementReductiontree;
  FuncTree _pvpAirElementReductiontree;
  FuncTree _pvpFireElementReductiontree;
  FuncTree _meleeDamageDonePercenttree;
  FuncTree _meleeDamageReceivedPercenttree;
  FuncTree _rangedDamageDonePercenttree;
  FuncTree _rangedDamageReceivedPercenttree;
  FuncTree _weaponDamageDonePercenttree;
  FuncTree _weaponDamageReceivedPercenttree;
  FuncTree _spellDamageDonePercenttree;
  FuncTree _spellDamageReceivedPercenttree;
  FuncTree _spellModificationstree;
};

#endif // CHARACTERCHARACTERISTICSINFORMATIONS_H